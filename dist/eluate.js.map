{
  "version": 3,
  "sources": ["../src/core/functions.js", "../src/core/features/text.js", "../src/core/features/event.js", "../src/core/features/show.js", "../src/core/initElement.js", "../src/core/initRoot.js", "../src/main.js"],
  "sourcesContent": ["function createFnGlobal(value, proxy) {\n  const setGlobal = Object.keys(proxy)\n    .map((k) => `globalThis.${k} = this.${k}`)\n    .join(';');\n  return new Function(`${setGlobal};\\nreturn ${value}`).bind(proxy);\n}\n\nexport { createFnGlobal };\n", "import { createFnGlobal } from '../functions';\n\nfunction textImpl(element, value, proxy) {\n  const valueFn = createFnGlobal(value, proxy);\n  proxy.$text.push({ element, valueFn });\n  element.innerHTML = valueFn();\n}\n\nexport default textImpl;\n", "function eventImpl(eventName, element, value, proxy) {\n  // TODO: not reactive for nested objects and arrays\n  const eventHandler = new Function('$event', value).bind(proxy);\n  element.addEventListener(eventName, eventHandler);\n}\n\nexport default eventImpl;\n", "import { createFnGlobal } from '../functions';\n\nfunction showImpl(element, value, proxy) {\n  const valueFn = createFnGlobal(value, proxy);\n  proxy.$show.push({ element, valueFn });\n  element.style.display = valueFn() ? '' : 'none';\n}\n\nexport default showImpl;\n", "import textImpl from './features/text';\nimport eventImpl from './features/event';\nimport showImpl from './features/show';\n\nfunction initElement(element, proxy) {\n  Object.entries(element.dataset).forEach(([name, value]) => {\n    if (name === 'text') {\n      textImpl(element, value, proxy);\n    } else if (name.startsWith('on:')) {\n      const [, eventName] = name.split(':');\n      eventImpl(eventName, element, value, proxy);\n    } else if (name === 'show') {\n      showImpl(element, value, proxy);\n    }\n  });\n  [...element.children].forEach((child) => {\n    initElement(child, proxy);\n  });\n}\n\nexport default initElement;\n", "import initElement from './initElement';\n\nfunction createObjectProxy(target = {}) {\n  // special cases used to update the real DOM\n  let $text = [];\n  let $show = [];\n\n  // TODO: check for cases like nested objects or arrays for data-text and data-show (and maybe more later)\n  const proxy = new Proxy(target, {\n    get(target, prop) {\n      if (prop === '$text') {\n        return $text;\n      } else if (prop === '$show') {\n        return $show;\n      }\n\n      let result = new Function(`return this.${prop}`).call(target);\n      return result;\n    },\n    set(target, prop, value) {\n      if (prop === '$text') {\n        $text = value;\n      } else if (prop === '$show') {\n        $show = value;\n      }\n\n      new Function(`return this.${prop} = ${value}`).call(target);\n\n      // update the real DOM\n      // data-text\n      $text.forEach(({ element, valueFn }) => {\n        element.innerHTML = valueFn();\n      });\n      // data-show\n      $show.forEach(({ element, valueFn }) => {\n        element.style.display = valueFn() ? '' : 'none';\n      });\n    },\n  });\n  return proxy;\n}\n\nfunction initRoot(element, value) {\n  if (value === '') value = '{}';\n  const dataObj = new Function(`return ${value};`)();\n  if (dataObj.constructor !== Object) {\n    throw new Error('`data-set` value must be an object');\n  }\n\n  // create an object proxy to use in data binding\n  const proxy = createObjectProxy(dataObj);\n  [...element.children].forEach((child) => {\n    initElement(child, proxy);\n  });\n}\n\nexport default initRoot;\n", "import initRoot from './core/initRoot';\n\n// find element with 'data-set' to initialize the root element of the app\ndocument.querySelectorAll('*').forEach((element) => {\n  Object.entries(element.dataset).forEach(([name, value]) => {\n    if (name === 'set') {\n      initRoot(element, value);\n    }\n  });\n});\n\n// remove all 'data-*' attributes\n// idk, just to make the html looks cleaner\ndocument.querySelectorAll('*').forEach((element) => {\n  Object.entries(element.dataset).forEach(([name, _]) => {\n    delete element.dataset[name];\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
